#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:yaml", "yaml")

#@ def tmc_config():
#@overlay/match missing_ok=True
#@overlay/match-child-defaults missing_ok=True
harborProject: #@ "{}".format(data.values.registry.tmc.repo)
dnsZone: #@ "{}".format(data.values.domain)
clusterIssuer: #@ "{}".format(data.values.certmanager.clusterissuer)
postgres:
  userPassword: Passw0rd
  maxConnections: 300
minio:
  username: root
  password: Passw0rd
contourEnvoy:
  serviceType: LoadBalancer
  serviceAnnotations:
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true" 
    cert-manager.io/cluster-issuer: #@ "{}".format(data.values.certmanager.clusterissuer)
    ingress.core.tls: "true"
alertmanager:
  criticalAlertReceiver: {}
  warningAlertReceiver: {}
oidc:
    issuerType: "pinniped"
    issuerURL: #@ "https://dex." + data.values.domain
    clientID: #@ "{}".format(data.values.oidc.clientid)
    clientSecret: #@ "{}".format(data.values.oidc.clientsecret)
pinnipedExtraEnvVars: []
telemetry:
  ceipOptIn: true
  eanNumber: INTERNAL
  ceipAgreement: true
trustedCAs:
  custom-ca.pem: #@ "{}".format(data.values.trusted.ca)
  habror-ca.pem: #@ "{}".format(data.values.trusted.harbor)
#@ end

apiVersion: v1
kind: Secret
metadata:
  name: secret-tmc-values
  namespace: tmc-local
stringData:
  change-default-reg-secret.yml: #@ yaml.encode(overlay.apply(tmc_config()))