#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:yaml", "yaml")

#@ def tmc_config():
#@overlay/match missing_ok=True
#@overlay/match-child-defaults missing_ok=True
authenticationType: ldap
clusterIssuer: #@ "{}".format(data.values.certmanager.clusterissuer)
contourEnvoy:
  serviceType: LoadBalancer
dnsZone: #@ "{}".format(data.values.domain)
harborProject: #@ "{}".format(data.values.registry.tmc.repo)
idpGroupRoles:
  admin: #@ "{}".format(data.values.ldap.admin)
  member: #@ "{}".format(data.values.ldap.member)
ldap:
  domainName: #@ "{}".format(data.values.ldap.domainName)
  groupBaseDN: #@ "{}".format(data.values.ldap.groupBaseDN)
  host: #@ "{}".format(data.values.ldap.host)
  password: #@ "{}".format(data.values.ldap.password)
  rootCA: #@ "{}".format(data.values.ldap.rootCA)
  type: #@ "{}".format(data.values.ldap.type)
  userBaseDN: #@ "{}".format(data.values.ldap.userBaseDN)
  username: #@ "{}".format(data.values.ldap.username)
  userSearchFilter: "(&(objectClass=person)(sAMAccountName={}))"
  groupSearchFilter: "(&(objectClass=group)(member={}))"
minio:
  username: root
  password: Passw0rd
oidc:
  issuerType: pinniped
  issuerURL: #@ "https://pinniped-supervisor.{}/provider/pinniped".format(data.values.domain)
postgres:
  userPassword: Passw0rd
  maxConnections: 300
telemetry:
  ceipOptIn: true
  eanNumber: INTERNAL
  ceipAgreement: true
trustedCAs:
  custom-ca.pem: #@ "{}".format(data.values.trusted.ca)
  habror-ca.pem: #@ "{}".format(data.values.trusted.harbor)
#@ end

apiVersion: v1
kind: Secret
metadata:
  name: secret-tmc-values
  namespace: tmc-local
stringData:
  change-default-reg-secret.yml: #@ yaml.encode(overlay.apply(tmc_config()))