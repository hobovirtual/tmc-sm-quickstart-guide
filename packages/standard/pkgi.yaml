#@ load("@ytt:data", "data")
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package-ClusterRole: cert-manager-packages-cluster-role
    tkg.tanzu.vmware.com/tanzu-package-ClusterRoleBinding: cert-manager-packages-cluster-rolebinding
    tkg.tanzu.vmware.com/tanzu-package-ServiceAccount: cert-manager-packages-sa
    kapp.k14s.io/update-strategy: "fallback-on-replace"
    kapp.k14s.io/create-strategy: "fallback-on-replace"
  name: cert-manager
  namespace: tanzu-packages
spec:
  serviceAccountName: cert-manager-packages-sa
  packageRef:
    refName: cert-manager.tanzu.vmware.com
    versionSelection:
      constraints: #@ data.values.certmanager.version
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package-ClusterRole: external-dns-packages-cluster-role
    tkg.tanzu.vmware.com/tanzu-package-ClusterRoleBinding: cexternal-dns-packages-cluster-rolebinding
    tkg.tanzu.vmware.com/tanzu-package-ServiceAccount: external-dns-packages-sa
    kapp.k14s.io/update-strategy: "fallback-on-replace"
    kapp.k14s.io/create-strategy: "fallback-on-replace"
  name: external-dns
  namespace: tanzu-packages
spec:
  serviceAccountName: external-dns-packages-sa
  packageRef:
    refName: external-dns.tanzu.vmware.com
    versionSelection:
      constraints: #@ data.values.externaldns.version
  values:
  - secretRef:
      name: external-dns-values-secret